function PostsController(e,o){!function t(){o.fetch().then(function(o){e.posts=o.data?o.data:[]},function(o){});e.addPost=function(){e.body&&o.create({username:"sampleUser",body:e.body}).then(function(o){e.posts.unshift(o.data),e.body=null},function(o){console.log(o)})};e.removePost=function(){o.remove({id:this.post._id}).then(function(o){t()},function(o){console.log(o)})}}()}PostsController.$inject=["$scope","PostsService"],angular.module("app",["ngRoute"]),angular.module("app").controller("PostsController",PostsController),angular.module("app").service("PostsService",["$http",function(t){this.fetch=function(){return t({method:"GET",url:"http://localhost:3000/api/posts"})},this.create=function(o){return console.log(o),t({url:"/api/posts",method:"POST",data:o})},this.remove=function(o){return t({url:"/api/removePost",method:"POST",data:o})}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsController",templateUrl:"posts.html"}).when("/register",{controller:"RegisterController",templateUrl:"register.html"}).when("/login",{controller:"LoginController",templateUrl:"login.html"})}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RzLmNvbnRyb2xsZXIuanMiLCJtb2R1bGUuanMiLCJwb3N0cy5zZXJ2aWNlLmpzIiwicm91dGVzLmpzIl0sIm5hbWVzIjpbIlBvc3RzQ29udHJvbGxlciIsIiRzY29wZSIsIlBvc3RzU2VydmljZSIsImluaXQiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsInBvc3RzIiwiZGF0YSIsImVycm9yIiwiYWRkUG9zdCIsImJvZHkiLCJjcmVhdGUiLCJ1c2VybmFtZSIsInVuc2hpZnQiLCJjb25zb2xlIiwibG9nIiwicmVtb3ZlUG9zdCIsInJlbW92ZSIsImlkIiwidGhpcyIsInBvc3QiLCJfaWQiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsInNlcnZpY2UiLCIkaHR0cCIsIm1ldGhvZCIsInVybCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIl0sIm1hcHBpbmdzIjoiQUFLQSxTQUFBQSxnQkFBQUMsRUFBQUMsSUFLQSxTQUFBQyxJQUVBRCxFQUFBRSxRQUFBQyxLQUFBLFNBQUFDLEdBQ0FMLEVBQUFNLE1BQUFELEVBQUFFLEtBQUFGLEVBQUFFLEtBQUEsSUFDQSxTQUFBQyxNQUdBUixFQUFBUyxRQUFBLFdBQ0FULEVBQUFVLE1BQ0FULEVBQUFVLE9BQUEsQ0FDQUMsU0FBQSxhQUNBRixLQUFBVixFQUFBVSxPQUNBTixLQUFBLFNBQUFDLEdBQ0FMLEVBQUFNLE1BQUFPLFFBQUFSLEVBQUFFLE1BQ0FQLEVBQUFVLEtBQUEsTUFFQSxTQUFBTCxHQUNBUyxRQUFBQyxJQUFBVixNQUtBTCxFQUFBZ0IsV0FBQSxXQUVBZixFQUFBZ0IsT0FBQSxDQUNBQyxHQUFBQyxLQUFBQyxLQUFBQyxNQUVBakIsS0FBQSxTQUFBQyxHQUNBSCxLQUVBLFNBQUFHLEdBQ0FTLFFBQUFDLElBQUFWLE1BbENBSCxxRENQQW9CLFFBQUFDLE9BQUEsTUFBQSxDQUNBLFlEREFELFFBQ0FDLE9BQUEsT0FDQUMsV0FBQSxrQkFBQXpCLGlCRUZBdUIsUUFDQUMsT0FBQSxPQUNBRSxRQUFBLGVBQUEsQ0FBQSxRQUFBLFNBQUFDLEdBRUFQLEtBQUFoQixNQUFBLFdBRUEsT0FBQXVCLEVBQUEsQ0FDQUMsT0FBQSxNQUNBQyxJQUFBLHFDQUlBVCxLQUFBUixPQUFBLFNBQUFTLEdBRUEsT0FEQU4sUUFBQUMsSUFBQUssR0FDQU0sRUFBQSxDQUNBRSxJQUFBLGFBQ0FELE9BQUEsT0FDQXBCLEtBQUFhLEtBR0FELEtBQUFGLE9BQUEsU0FBQUMsR0FDQSxPQUFBUSxFQUFBLENBQ0FFLElBQUEsa0JBQ0FELE9BQUEsT0FDQXBCLEtBQUFXLFFDeEJBSSxRQUNBQyxPQUFBLE9BQ0FNLE9BQUEsQ0FBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLElBQUEsQ0FBQVAsV0FBQSxrQkFBQVEsWUFBQSxlQUNBRCxLQUFBLFlBQUEsQ0FBQVAsV0FBQSxxQkFBQVEsWUFBQSxrQkFDQUQsS0FBQSxTQUFBLENBQUFQLFdBQUEsa0JBQUFRLFlBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhclxuLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdQb3N0c0NvbnRyb2xsZXInLCBQb3N0c0NvbnRyb2xsZXIpXG5cbi8qKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIFBvc3RzQ29udHJvbGxlcigkc2NvcGUsUG9zdHNTZXJ2aWNlICkge1xuXG5pbml0KCk7XG5cblxuZnVuY3Rpb24gaW5pdCgpIHtcblxuICAgIFBvc3RzU2VydmljZS5mZXRjaCgpLnRoZW4gKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAkc2NvcGUucG9zdHMgPSByZXNwb25zZS5kYXRhID8gcmVzcG9uc2UuZGF0YSA6IFtdO1xuICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge30pXG4gIFxuXG4gICAgJHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgkc2NvcGUuYm9keSkge1xuICAgICAgICAgICBQb3N0c1NlcnZpY2UuY3JlYXRlKHsgXG4gICAgICAgICAgIHVzZXJuYW1lOiBcInNhbXBsZVVzZXJcIixcbiAgICAgICAgICAgYm9keTogJHNjb3BlLmJvZHl9KVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucG9zdHMudW5zaGlmdChyZXNwb25zZS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICRzY29wZS5ib2R5ID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgIH1cbiAgICAkc2NvcGUucmVtb3ZlUG9zdCA9IGZ1bmN0aW9uKCkge1xuICAgIFxuICAgICAgICAgICBQb3N0c1NlcnZpY2UucmVtb3ZlKCB7IFxuICAgICAgICAgICAgaWQ6IHRoaXMucG9zdC5faWQgICAgICAgICAgICBcbiAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5pdCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbn1cbn0iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAgICduZ1JvdXRlJ1xuXSk7IiwiYW5ndWxhclxuLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdQb3N0c1NlcnZpY2UnLCBmdW5jdGlvbiAoJGh0dHApIHtcblxuICAgIHRoaXMuZmV0Y2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gICRodHRwKHtcbiAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3RzJ1xuICAgICAgICB9KVxuXG4gICAgfVxuICAgIHRoaXMuY3JlYXRlPSBmdW5jdGlvbihwb3N0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHBvc3QpXG4gICAgICAgIHJldHVybiAgJGh0dHAoe1xuICAgICAgICAgICAgdXJsOiAnL2FwaS9wb3N0cycsXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YTogcG9zdFxuICAgICAgICB9KVxuICAgIH1cbiAgICB0aGlzLnJlbW92ZSA9IGZ1bmN0aW9uKGlkKSB7XG4gICAgICAgIHJldHVybiAgICAkaHR0cCh7XG4gICAgICAgICAgICB1cmw6ICcvYXBpL3JlbW92ZVBvc3QnLFxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IGlkXG4gICAgfSl9fSkiLCJhbmd1bGFyXG4ubW9kdWxlKCdhcHAnKVxuLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAkcm91dGVQcm92aWRlclxuICAgIC53aGVuKCcvJywge2NvbnRyb2xsZXI6ICdQb3N0c0NvbnRyb2xsZXInLCB0ZW1wbGF0ZVVybDoncG9zdHMuaHRtbCd9KVxuICAgIC53aGVuKCcvcmVnaXN0ZXInLCB7Y29udHJvbGxlcjonUmVnaXN0ZXJDb250cm9sbGVyJywgdGVtcGxhdGVVcmw6ICdyZWdpc3Rlci5odG1sJ30pXG4gICAgLndoZW4oJy9sb2dpbicsIHtjb250cm9sbGVyOiAnTG9naW5Db250cm9sbGVyJywgdGVtcGxhdGVVcmw6J2xvZ2luLmh0bWwnfSlcbn0pIl19
